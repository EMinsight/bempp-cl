on:
  push

jobs:
  build-and-publish-docker:
    name: Build and publish testing environment docker image
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Make cache folder
        run: mkdir ~/cache
      - name: Cache Dockerfile
        id: cache-docker
        uses: actions/cache@v2
        with:
          path: ~/cache/Dockerfile
          key: ${{ runner.os }}-Dockerfile
      - name: touch ~/cache/Dockerfile
        run: touch ~/cache/Dockerfile
      - name: Build and push Docker image with exafmm
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mscroggs/bempp-cl-test
          tags: exafmm, latest
          target: bempp-dev-env-with-exafmm
          cache_froms: mscroggs/bempp-cl-test:exafmm
        if: ${{ diff Dockerfie ~/cache/Dockerfile > /dev/null }}

      - name: Build and push Docker image with pyexafmm
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: mscroggs/bempp-cl-test
          tags: pyexafmm
          target: bempp-dev-env-with-pyexafmm
          cache_froms: mscroggs/bempp-cl-test:pyexafmm
        if: ${{ diff Dockerfie ~/cache/Dockerfile > /dev/null }}
      - name: Copy Dockerfile to ~/cache/Dockerfile
        run: cp Dockerfile ~/cache/Dockerfile
        if: ${{ diff Dockerfie ~/cache/Dockerfile > /dev/null }}
  
  style-checks:
    name: Run style checks
    runs-on: ubuntu-20.04
    steps:
      uses: actions/checkout@v2
      - run:
          command: pip3 install pydocstyle flake8
      - run:
          command: |
              python3 -m flake8 bempp
              python3 -m flake8 test
          name: Run flake8 checks
      - run:
          command: python3 -m pydocstyle bempp/api
          name: Run pydocstyle checks
